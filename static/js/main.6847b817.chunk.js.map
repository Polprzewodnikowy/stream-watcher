{"version":3,"sources":["twitch/actionTypes.js","twitch/reducers/token.js","shared/utils.js","shared/messages.js","shared/redux/actionCreator.js","shared/redux/reducerCreator.js","shared/Loader.jsx","twitch/reducers/user.js","twitch/reducers/followedIds.js","twitch/reducers/followed.js","twitch/reducers/streams.js","twitch/reducers/games.js","twitch/reducers/videos.js","twitch/reducers/channel.js","twitch/reducers/video.js","twitch/reducers/showChat.js","twitch/reducers/showVideos.js","twitch/constants.js","twitch/reducers/refreshInterval.js","twitch/reducers/errors.js","store/persistence.js","twitch/reducers/index.js","sidebar/reducers.js","sidebar/actionTypes.js","rootReducer/rootReducer.js","rootReducer/persistenceConfiguration.js","store/index.js","store/configureStore.js","theme/theme.js","shared/header/Header.jsx","sidebar/Sidebar.jsx","sidebar/actions/toggleSidebar.js","sidebar/SidebarContainer.js","shared/header/HeaderContainer.js","layout/Layout.jsx","twitch/actions/saveToken.js","twitch/transform.js","twitch/actions/common.js","twitch/utils.js","twitch/actions/fetchUsers.js","twitch/actions/fetchFollowed.js","twitch/actions/fetchGames.js","twitch/actions/fetchStreams.js","twitch/selectors.js","twitch/actions/fetchVideos.js","twitch/actions/setChannel.js","twitch/actions/setVideo.js","twitch/actions/authentication.js","twitch/actions/fetchAll.js","twitch/actions/setRefreshInterval.js","twitch/actions/toggleChat.js","twitch/actions/toggleVideos.js","twitch/types.js","twitch/player/TwitchPlayer.jsx","twitch/player/TwitchPlayerContainer.js","twitch/chat/TwitchChat.jsx","twitch/chat/TwitchChatContainer.js","twitch/playerWithChat/PlayerWithChat.jsx","twitch/playerWithChat/PlayerWithChatContainer.js","twitch/videos/VideoThumbnailLabel.jsx","twitch/videos/VideoThumbnail.jsx","twitch/videos/VideoTile.jsx","twitch/videos/VideoTileContainer.js","twitch/videos/TwitchVideos.jsx","twitch/videos/TwitchVideosContainer.jsx","twitch/logic/TwitchLogic.jsx","twitch/logic/TwitchLogicContainer.js","twitch/errors/TwitchErrorModal.jsx","twitch/errors/TwitchErrorModalContainer.js","twitch/view/TwitchView.jsx","twitch/view/TwitchViewContainer.js","twitch/channels/channel/Channel.jsx","twitch/channels/channel/ChannelContainer.js","twitch/channels/TwitchChannels.jsx","twitch/channels/TwitchChannelsContainer.js","title/Title.jsx","title/TitleContainer.js","headerButtons/ActionButton.jsx","headerButtons/AuthenticationButtonContainer.jsx","headerButtons/CloseStreamButtonContainer.jsx","headerButtons/ToggleChatButtonContainer.jsx","headerButtons/ChangeViewButtonContainer.jsx","headerButtons/HeaderButtons.jsx","App.jsx","serviceWorker.js","index.js"],"names":["TWITCH_FETCH_USER_ERROR","TWITCH_FETCH_USER_SUCCESS","TWITCH_FETCH_FOLLOWED_IDS_ERROR","TWITCH_FETCH_FOLLOWED_IDS_SUCCESS","TWITCH_FETCH_FOLLOWED_USERS_ERROR","TWITCH_FETCH_FOLLOWED_USERS_SUCCESS","TWITCH_FETCH_STREAMS_ERROR","TWITCH_FETCH_STREAMS_SUCCESS","TWITCH_FETCH_GAMES_ERROR","TWITCH_FETCH_GAMES_SUCCESS","TWITCH_FETCH_VIDEOS_ERROR","TWITCH_FETCH_VIDEOS_SUCCESS","token","state","type","newToken","sanitizeUrl","url","split","replace","removeHashAndParametersFromUrl","window","history","replaceState","location","href","saveInLocalStorage","key","value","localStorage","setItem","JSON","stringify","loadFromLocalStorage","getItem","parse","error","removeItem","deleteInLocalStorage","isUndefined","object","isString","isNumber","isArray","Array","getParamsFromHash","hash","length","reduce","prev","next","createQueryParameters","query","Object","keys","filter","map","v","join","createUrl","mergeBy","sourceArray","options","identifier","pop","arrayItem","result","find","getDefaultValue","Number","MIN_SAFE_INTEGER","sortBy","array","id","dir","sort","a","b","sortAscBy","sortDescBy","messages","en","app","title","actions","tooltips","login","logout","showChat","hideChat","closeStream","closeVideo","refreshData","showVideos","errors","closeModal","fetchErrorType","fetchErrorMessage","message","unknownErrorType","unknownErrorMessage","twitch","labels","views","buildActionCreator","argsNames","args","action","forEach","argName","index","buildActionReducers","start","success","clear","useStyles","makeStyles","theme","linear","width","overlay","height","top","display","alignItems","justifyContent","backgroundColor","palette","grey","Loader","isLoading","position","variant","zIndex","styles","getLoaderVariant","useCallback","className","style","inline","CircularProgress","color","LinearProgress","Fade","mountOnEnter","unmountOnExit","in","defaultProps","isFetchingUser","fetchedUserSuccessfully","isFetchingFollowedIds","fetchedFollowedIdsSuccessfully","followedIds","combineReducers","list","payload","uniq","data","total","cursor","pagination","isFetchingFollowed","fetchedFollowedSuccessfully","isFetchingStreams","fetchedStreamsSuccessfully","isFetchingGames","fetchedGamesSuccessfully","isFetchingVideos","fetchedVideosSuccessfully","videos","uniqBy","fetchedAll","channel","selectedChannel","video","selectedVideo","show","AUTH_PROTOCOL","process","REACT_APP_TWITCH_AUTH_PROTOCOL","AUTH_HOST","REACT_APP_TWITCH_AUTH_HOST","AUTH_PORT","REACT_APP_TWITCH_AUTH_PORT","HELIX_PROTOCOL","REACT_APP_TWITCH_HELIX_PROTOCOL","HELIX_HOST","REACT_APP_TWITCH_HELIX_HOST","HELIX_PORT","REACT_APP_TWITCH_HELIX_PORT","TWITCH_AUTHORIZATION_URL","TWITCH_API_URL","TWITCH_USERS_URL","TWITCH_USERS_FOLLOWS_URL","TWITCH_STREAMS_URL","TWITCH_GAMES_URL","TWITCH_VIDEOS_URL","refreshInterval","interval","store","configuration","user","followed","streams","games","isOpen","open","sidebar","persistenceConfiguration","rootReducer","initialState","enhancers","applyMiddleware","thunk","composedEnhancers","composeWithDevTools","createStore","configureStore","utils","subscribe","throttle","pick","getState","createMuiTheme","primary","main","light","dark","secondary","background","default","paper","text","progress","appBar","maxWidth","Header","children","toggleSidebar","AppBar","Toolbar","IconButton","onClick","Menu","Sidebar","setOpen","SwipeableDrawer","disableBackdropTransition","keepMounted","onOpen","onClose","ModalProps","sidebarSetState","setSidebarState","dispatch","toggleSidebarState","connect","sidebarActions","gridTemplateRows","Layout","header","sidebarHeader","HeaderContainer","SidebarContainer","saveToken","clearToken","transformError","status","errorType","transformUsers","display_name","profile_image_url","userId","name","avatarUrl","transformUser","transformUsersFollows","item","to_id","transformStreams","stream","game_id","user_id","viewer_count","gameId","viewers","transformStream","transformGames","game","gameTitle","transformGame","transformVideos","created_at","description","duration","published_at","thumbnail_url","view_count","videoId","createdAt","publishedAt","viewCount","thumbnailUrl","transformVideo","clearErrors","buildTwitchRequestActionCreator","headers","transform","optionParams","twitchHeaders","Authorization","assign","baseAction","method","mode","contentType","body","combine","fetchOptions","isParallelQuery","urlWithQueryParams","q","transformFunction","combineFunction","transformErrorFunction","checkResponse","response","ok","json","fetchAction","fetchUrl","fetch","then","Promise","all","catch","Error","buildRequestActionCreator","other","fetchUsers","clearUser","fetchUser","clearFollowedIds","clearFollowedUsers","clearFollowed","fetchFollowed","from_id","first","after","filteredUsers","chunk","clearGames","fetchGames","filteredGames","filterAndTransformGameIds","ids","clearStreams","fetchStreams","getFollowed","getStreams","getSelectedChannel","createSelector","getSelectedStream","getChannelAvatarUrl","getChannelName","getStreamTitle","selectedStream","getStreamsWithGames","getChannels","clearVideos","fetchVideos","setChannel","clearChannel","setVideo","clearVideo","twitchLogin","client_id","redirect_uri","URL","origin","response_type","twitchLogout","fetchAll","clearAll","setRefreshInterval","appSetShowChatState","setShowChatState","toggleShowChatState","appSetShowVideosState","setShowVideosState","toggleShowVideosState","PropTypes","string","number","channelType","shape","arrayOf","videoType","player","TwitchPlayer","targetID","useState","setPlayer","classes","initPlayer","resolve","Boolean","document","getElementById","script","createElement","setAttribute","addEventListener","appendChild","Twitch","Player","useEffect","pause","chat","TwitchChat","getChatUrl","frameBorder","src","container","flexFlow","playerContainer","flexGrow","paddingTop","left","chatContainer","minWidth","PlayerWithChat","isVisible","TwitchPlayerContainer","TwitchChatContainer","padding","opacity","borderRadius","common","black","typography","VideoThumbnailLabel","bottom","offsetHorizontal","offsetVertical","right","Typography","component","thumbnail","paddingBottom","backgroundSize","backgroundRepeat","backgroundPosition","labelIcon","marginRight","VideoThumbnail","thumbnailHeight","thumbnailWidth","backgroundImage","AccessTime","fontSize","moment","toUpperCase","format","getDurationText","getViewCountText","fromNow","getPublishedAtText","tile","overflow","boxShadow","shadows","gridTemplateColumns","spacing","textAlign","VideoTile","onVideoClick","ButtonBase","classnames","noWrap","overflowY","margin","marginTop","TwitchVideos","clearData","fetchData","handleScroll","target","scrollHeight","scrollTop","clientHeight","isInitialLoading","isSubsequentLoading","onScroll","VideoTileContainer","TwitchLogic","clearUrl","fetchInitialData","getToken","refreshVideos","setInterval","clearInterval","propTypes","func","isRequired","access_token","contrastText","icon","TwitchErrorModal","isModalVisible","onRefresh","Snackbar","anchorOrigin","vertical","horizontal","TransitionComponent","props","Slide","direction","SnackbarContent","Refresh","Close","firstError","wrapper","TwitchView","PlayerWithChatContainer","TwitchVideosContainer","TwitchLogicContainer","TwitchErrorModalContainer","dimAvatar","subtitleContainer","Channel","changeChannel","isSelected","isActive","isStreamLive","ListItem","button","selected","ListItemAvatar","Avatar","TwitchChannels","channels","List","dense","ChannelContainer","avatar","marginLeft","Title","secondaryText","showFullTitle","React","memo","buttonBase","ActionButton","tooltip","Tooltip","paddingLeft","paddingRight","AuthenticationButton","isLoggedIn","Person","twitchActions","closeStreamOrVideo","close","back","ArrowBack","toggleChat","Chat","ChatOutlined","changeView","Videocam","VideocamOutlined","HeaderButtons","CloseStreamButtonContainer","ChangeViewButtonContainer","ToggleChatButtonContainer","AuthenticationButtonContainer","App","ThemeProvider","CssBaseline","TitleContainer","TwitchChannelsContainer","TwitchViewContainer","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","checkValidServiceWorker","get","indexOf","ready","unregister","reload","ReactDOM","render"],"mappings":"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","file":"static/js/main.6847b817.chunk.js","sourcesContent":["export const TWITCH_SAVE_TOKEN = 'TWITCH_SAVE_TOKEN';\nexport const TWITCH_CLEAR_TOKEN = 'TWITCH_CLEAR_TOKEN';\n\nexport const TWITCH_SAVE_USER = 'TWITCH_SAVE_USER';\nexport const TWITCH_SAVE_FOLLOWED = 'TWITCH_SAVE_FOLLOWED';\nexport const TWITCH_SAVE_STREAMS = 'TWITCH_SAVE_STREAMS';\nexport const TWITCH_SAVE_GAMES = 'TWITCH_SAVE_GAMES';\n\nexport const TWITCH_FETCH_USER = 'TWITCH_FETCH_USER';\nexport const TWITCH_FETCH_USER_ERROR = `${TWITCH_FETCH_USER}_ERROR`;\nexport const TWITCH_FETCH_USER_SUCCESS = `${TWITCH_FETCH_USER}_SUCCESS`;\nexport const TWITCH_CLEAR_USER = 'TWITCH_CLEAR_USER';\n\nexport const TWITCH_FETCH_FOLLOWED_IDS = 'TWITCH_FETCH_FOLLOWED_IDS';\nexport const TWITCH_FETCH_FOLLOWED_IDS_ERROR = `${TWITCH_FETCH_FOLLOWED_IDS}_ERROR`;\nexport const TWITCH_FETCH_FOLLOWED_IDS_SUCCESS = `${TWITCH_FETCH_FOLLOWED_IDS}_SUCCESS`;\nexport const TWITCH_CLEAR_FOLLOWED_IDS = 'TWITCH_CLEAR_FOLLOWED_IDS';\n\nexport const TWITCH_FETCH_FOLLOWED_USERS = 'TWITCH_FETCH_FOLLOWED_USERS';\nexport const TWITCH_FETCH_FOLLOWED_USERS_ERROR = `${TWITCH_FETCH_FOLLOWED_USERS}_ERROR`;\nexport const TWITCH_FETCH_FOLLOWED_USERS_SUCCESS = `${TWITCH_FETCH_FOLLOWED_USERS}_SUCCESS`;\nexport const TWITCH_CLEAR_FOLLOWED_USERS = 'TWITCH_CLEAR_FOLLOWED_USERS';\n\nexport const TWITCH_CLEAR_FOLLOWED = 'TWITCH_CLEAR_FOLLOWED';\n\nexport const TWITCH_FETCH_STREAMS = 'TWITCH_FETCH_STREAMS';\nexport const TWITCH_FETCH_STREAMS_ERROR = `${TWITCH_FETCH_STREAMS}_ERROR`;\nexport const TWITCH_FETCH_STREAMS_SUCCESS = `${TWITCH_FETCH_STREAMS}_SUCCESS`;\nexport const TWITCH_CLEAR_STREAMS = 'TWITCH_CLEAR_STREAMS';\n\nexport const TWITCH_FETCH_GAMES = 'TWITCH_FETCH_GAMES';\nexport const TWITCH_FETCH_GAMES_ERROR = `${TWITCH_FETCH_GAMES}_ERROR`;\nexport const TWITCH_FETCH_GAMES_SUCCESS = `${TWITCH_FETCH_GAMES}_SUCCESS`;\nexport const TWITCH_CLEAR_GAMES = 'TWITCH_CLEAR_GAMES';\n\nexport const TWITCH_FETCH_VIDEOS = 'TWITCH_FETCH_VIDEOS';\nexport const TWITCH_FETCH_VIDEOS_ERROR = `${TWITCH_FETCH_VIDEOS}_ERROR`;\nexport const TWITCH_FETCH_VIDEOS_SUCCESS = `${TWITCH_FETCH_VIDEOS}_SUCCESS`;\nexport const TWITCH_CLEAR_VIDEOS = 'TWITCH_CLEAR_VIDEOS';\n\nexport const TWITCH_SET_CHANNEL = 'TWITCH_SET_CHANNEL';\nexport const TWITCH_CLEAR_CHANNEL = 'TWITCH_CLEAR_CHANNEL';\n\nexport const TWITCH_SET_VIDEO = 'TWITCH_SET_VIDEO';\nexport const TWITCH_CLEAR_VIDEO = 'TWITCH_CLEAR_VIDEO';\n\nexport const TWITCH_SET_SHOW_CHAT_STATE = 'TWITCH_SET_SHOW_CHAT_STATE';\nexport const TWITCH_SET_SHOW_VIDEOS_STATE = 'TWITCH_SET_SHOW_VIDEOS_STATE';\n\nexport const TWITCH_SET_REFRESH_INTERVAL = 'TWITCH_SET_REFRESH_INTERVAL';\n\nexport const TWITCH_CLEAR_ERRORS = 'TWITCH_CLEAR_ERRORS';\n","import { TWITCH_CLEAR_TOKEN, TWITCH_SAVE_TOKEN } from 'twitch/actionTypes';\n\nconst token = (state = null, { type, newToken }) => {\n  switch (type) {\n    case TWITCH_SAVE_TOKEN:\n      return newToken;\n    case TWITCH_CLEAR_TOKEN:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default token;\n","export const sanitizeUrl = (url) => url.split('?')[0].split('#')[0].replace(/\\/$/, '');\n\nexport const removeHashAndParametersFromUrl = () => window.history\n  .replaceState(null, null, sanitizeUrl(window.location.href));\n\nexport const saveInLocalStorage = (key, value) => window.localStorage\n  .setItem(key, JSON.stringify(value));\n\nexport const loadFromLocalStorage = (key) => {\n  const value = window.localStorage.getItem(key);\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    window.localStorage.removeItem(key);\n    return null;\n  }\n};\n\nexport const deleteInLocalStorage = (key) => window.localStorage.removeItem(key);\n\nexport const isUndefined = (object) => typeof object === 'undefined';\nexport const isString = (object) => typeof object === 'string';\nexport const isNumber = (object) => typeof object === 'number';\nexport const isArray = (object) => Array.isArray(object);\n\nexport const getParamsFromHash = () => {\n  const { hash } = window.location;\n  if (hash.length) {\n    const parameters = hash.replace('#', '').split('&');\n    return parameters.reduce((prev, next) => {\n      const [key, value] = next.split('=');\n      return { ...prev, [key]: value };\n    }, {});\n  }\n  return {};\n};\n\nexport const createQueryParameters = (query = {}) => (\n  Object\n    .keys(query)\n    .filter((key) => (\n      isString(query[key])\n      || isNumber(query[key])\n      || isArray(query[key])\n    ))\n    .map((key) => {\n      const value = query[key];\n\n      if (isString(value) || isNumber(value)) {\n        return `${key}=${value}`;\n      }\n\n      if (isArray(value)) {\n        return value.map((v) => `${key}=${v}`).join('&');\n      }\n\n      return null;\n    })\n    .join('&')\n);\n\nexport const createUrl = (url, query) => `${url}?${createQueryParameters(query)}`;\n\nexport const mergeBy = (sourceArray, ...options) => {\n  if (options.length <= 1) {\n    return sourceArray;\n  }\n\n  const identifier = options.pop();\n\n  return sourceArray.map((arrayItem) => ({\n    ...arrayItem,\n    ...options.reduce((result, next) => ({\n      ...result,\n      ...next.find(({ [identifier]: searchId }) => searchId === arrayItem[identifier]),\n    }), {}),\n  }));\n};\n\nconst getDefaultValue = (value) => (!isUndefined(value) ? value : Number.MIN_SAFE_INTEGER);\nconst sortBy = (array, id, dir) => array\n  .sort((a, b) => getDefaultValue(dir ? a[id] : b[id]) - getDefaultValue(!dir ? a[id] : b[id]));\nexport const sortAscBy = (array, id) => sortBy(array, id, true);\nexport const sortDescBy = (array, id) => sortBy(array, id, false);\n","const messages = {\n  en: {\n    app: {\n      title: 'Stream Watcher',\n    },\n    actions: {\n      tooltips: {\n        login: 'Login',\n        logout: 'Logout',\n        showChat: 'Show chat',\n        hideChat: 'Hide chat',\n        closeStream: 'Close stream',\n        closeVideo: 'Close video',\n        refreshData: 'Refresh data',\n        showVideos: 'Show videos',\n      },\n    },\n    errors: {\n      closeModal: 'Close',\n      fetchErrorType: 'Network error',\n      fetchErrorMessage: (message, url) => `Error \"${message}\" occured while loading \"${url}\". Please check your internet connection. Try refreshing the page.`,\n      unknownErrorType: 'Unknown Error',\n      unknownErrorMessage: 'Try refreshing the page',\n    },\n    twitch: {\n      labels: {\n        views: 'views',\n      },\n      error: 'Twitch error',\n    },\n  },\n};\n\nexport default messages;\n","import * as utils from '../utils';\nimport messages from '../messages';\n\nexport const buildActionCreator = (type, ...argsNames) => (...args) => {\n  const action = { type };\n\n  argsNames.forEach((argName, index) => {\n    action[argsNames[index]] = args[index];\n  });\n\n  return action;\n};\n\nexport const buildRequestActionCreator = (options) => (dispatch) => {\n  const {\n    baseAction,\n    url,\n    headers,\n    method = 'GET',\n    mode = 'cors',\n    contentType = 'application/json',\n    body,\n    query,\n    transform,\n    combine,\n    transformError,\n  } = options;\n\n  const actions = {\n    start: () => baseAction && dispatch(buildActionCreator(baseAction)()),\n    success: (payload) => baseAction && dispatch(buildActionCreator(`${baseAction}_SUCCESS`, 'payload')(payload)),\n    error: (error) => baseAction && dispatch(buildActionCreator(`${baseAction}_ERROR`, 'error')(error)),\n  };\n\n  actions.start();\n\n  const fetchOptions = {\n    headers: {\n      ...headers,\n      'Content-Type': contentType,\n    },\n    method,\n    mode,\n    body,\n  };\n\n  const isParallelQuery = utils.isArray(query);\n  const urlWithQueryParams = (\n    query && (\n      isParallelQuery ? query.map((q) => utils.createUrl(url, q)) : utils.createUrl(url, query)\n    )\n  ) || (\n    url\n  );\n  const transformFunction = transform || ((data) => data);\n  const combineFunction = (isParallelQuery && combine) || ((data) => data);\n  const transformErrorFunction = transformError || ((error) => error);\n\n  const checkResponse = (response) => {\n    if (!response.ok) {\n      throw response;\n    }\n    return response.json();\n  };\n\n  const processData = (data) => {\n    actions.success(data);\n    return data;\n  };\n\n  const processErrors = (error) => {\n    if (error instanceof Error) {\n      actions.error({\n        errorType: messages.en.errors.fetchErrorType,\n        message: messages.en.errors.fetchErrorMessage(error.message, url),\n      });\n    } else {\n      error.json()\n        .then(transformErrorFunction)\n        .then(actions.error);\n    }\n  };\n\n  const fetchAction = (fetchUrl) => fetch(fetchUrl, fetchOptions)\n    .then(checkResponse)\n    .then(transformFunction);\n\n  return (\n    isParallelQuery\n      ? Promise.all(urlWithQueryParams.map((fetchUrl) => fetchAction(fetchUrl)))\n      : fetchAction(urlWithQueryParams)\n  )\n    .then(combineFunction)\n    .then(processData)\n    .catch(processErrors);\n};\n","export const buildActionReducers = ({\n  start,\n  success,\n  error,\n  clear,\n}) => ([\n  (state = false, { type }) => {\n    switch (type) {\n      case start:\n        return true;\n      case success:\n      case error:\n      case clear:\n        return false;\n      default:\n        return state;\n    }\n  },\n  (state = false, { type }) => {\n    switch (type) {\n      case success:\n        return true;\n      case start:\n      case error:\n      case clear:\n        return false;\n      default:\n        return state;\n    }\n  },\n]);\n","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport {\n  makeStyles,\n  Fade,\n  CircularProgress,\n  LinearProgress,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  linear: {\n    width: '100%',\n  },\n  overlay: {\n    width: '100%',\n    height: '100%',\n    top: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.palette.grey[900],\n  },\n}));\n\nconst Loader = ({\n  isLoading,\n  position,\n  variant,\n  zIndex,\n}) => {\n  const styles = useStyles();\n\n  const getLoaderVariant = useCallback(() => (\n    <div className={styles[variant]} style={{ position, zIndex, top: position === 'sticky' ? 0 : null }}>\n      {{\n        inline: (<CircularProgress color=\"inherit\" />),\n        linear: (<LinearProgress color=\"secondary\" />),\n        overlay: (<CircularProgress color=\"inherit\" />),\n      }[variant]}\n    </div>\n  ), [styles, position, variant, zIndex]);\n\n  return (\n    <Fade mountOnEnter unmountOnExit in={isLoading}>\n      {getLoaderVariant()}\n    </Fade>\n  );\n};\n\nLoader.defaultProps = {\n  isLoading: false,\n  position: null,\n  variant: 'inline',\n  zIndex: null,\n};\n\nLoader.propTypes = {\n  isLoading: PropTypes.bool,\n  position: PropTypes.oneOf([null, 'fixed', 'absolute', 'sticky']),\n  variant: PropTypes.oneOf(['inline', 'overlay', 'linear']),\n  zIndex: PropTypes.number,\n};\n\nexport default Loader;\n","import { buildActionReducers } from 'shared';\nimport {\n  TWITCH_FETCH_USER,\n  TWITCH_FETCH_USER_SUCCESS,\n  TWITCH_FETCH_USER_ERROR,\n  TWITCH_CLEAR_USER,\n} from '../actionTypes';\n\nconst user = (state = {}, { type, payload }) => {\n  switch (type) {\n    case TWITCH_FETCH_USER_SUCCESS:\n      return payload.data[0];\n    case TWITCH_CLEAR_USER:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst [\n  isFetchingUser,\n  fetchedUserSuccessfully,\n] = buildActionReducers({\n  start: TWITCH_FETCH_USER,\n  success: TWITCH_FETCH_USER_SUCCESS,\n  error: TWITCH_FETCH_USER_ERROR,\n  clear: TWITCH_CLEAR_USER,\n});\n\nexport {\n  user,\n  isFetchingUser,\n  fetchedUserSuccessfully,\n};\n","import { uniq } from 'lodash';\nimport { combineReducers } from 'redux';\nimport { buildActionReducers } from 'shared';\nimport {\n  TWITCH_FETCH_FOLLOWED_IDS,\n  TWITCH_FETCH_FOLLOWED_IDS_SUCCESS,\n  TWITCH_FETCH_FOLLOWED_IDS_ERROR,\n  TWITCH_CLEAR_FOLLOWED_IDS,\n} from '../actionTypes';\n\nconst list = (state = [], { type, payload }) => {\n  switch (type) {\n    case TWITCH_FETCH_FOLLOWED_IDS_SUCCESS:\n      return uniq([...state, ...payload.data]);\n    case TWITCH_CLEAR_FOLLOWED_IDS:\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst total = (state = null, { type, payload }) => {\n  switch (type) {\n    case TWITCH_FETCH_FOLLOWED_IDS_SUCCESS:\n      return payload.total || state;\n    case TWITCH_CLEAR_FOLLOWED_IDS:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst cursor = (state = null, { type, payload }) => {\n  switch (type) {\n    case TWITCH_FETCH_FOLLOWED_IDS_SUCCESS:\n      return (payload.pagination && payload.pagination.cursor) || null;\n    case TWITCH_CLEAR_FOLLOWED_IDS:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst [\n  isFetchingFollowedIds,\n  fetchedFollowedIdsSuccessfully,\n] = buildActionReducers({\n  start: TWITCH_FETCH_FOLLOWED_IDS,\n  success: TWITCH_FETCH_FOLLOWED_IDS_SUCCESS,\n  error: TWITCH_FETCH_FOLLOWED_IDS_ERROR,\n  clear: TWITCH_CLEAR_FOLLOWED_IDS,\n});\n\nconst followedIds = combineReducers({\n  list,\n  total,\n  cursor,\n});\n\nexport {\n  followedIds,\n  isFetchingFollowedIds,\n  fetchedFollowedIdsSuccessfully,\n};\n","import { uniqBy } from 'lodash';\nimport { buildActionReducers } from 'shared';\nimport {\n  TWITCH_FETCH_FOLLOWED_USERS,\n  TWITCH_FETCH_FOLLOWED_USERS_SUCCESS,\n  TWITCH_FETCH_FOLLOWED_USERS_ERROR,\n  TWITCH_CLEAR_FOLLOWED_USERS,\n} from '../actionTypes';\n\nconst followed = (state = [], { type, payload }) => {\n  switch (type) {\n    case TWITCH_FETCH_FOLLOWED_USERS_SUCCESS:\n      return uniqBy([...state, ...payload.data], 'userId');\n    case TWITCH_CLEAR_FOLLOWED_USERS:\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst [\n  isFetchingFollowed,\n  fetchedFollowedSuccessfully,\n] = buildActionReducers({\n  start: TWITCH_FETCH_FOLLOWED_USERS,\n  success: TWITCH_FETCH_FOLLOWED_USERS_SUCCESS,\n  error: TWITCH_FETCH_FOLLOWED_USERS_ERROR,\n  clear: TWITCH_CLEAR_FOLLOWED_USERS,\n});\n\nexport {\n  followed,\n  isFetchingFollowed,\n  fetchedFollowedSuccessfully,\n};\n","import { buildActionReducers } from 'shared';\nimport {\n  TWITCH_FETCH_STREAMS,\n  TWITCH_FETCH_STREAMS_SUCCESS,\n  TWITCH_FETCH_STREAMS_ERROR,\n  TWITCH_CLEAR_STREAMS,\n} from '../actionTypes';\n\nconst streams = (state = [], { type, payload }) => {\n  switch (type) {\n    case TWITCH_FETCH_STREAMS_SUCCESS:\n      return payload.data;\n    case TWITCH_CLEAR_STREAMS:\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst [\n  isFetchingStreams,\n  fetchedStreamsSuccessfully,\n] = buildActionReducers({\n  start: TWITCH_FETCH_STREAMS,\n  success: TWITCH_FETCH_STREAMS_SUCCESS,\n  error: TWITCH_FETCH_STREAMS_ERROR,\n  clear: TWITCH_CLEAR_STREAMS,\n});\n\nexport {\n  streams,\n  isFetchingStreams,\n  fetchedStreamsSuccessfully,\n};\n","import { uniqBy } from 'lodash';\nimport { buildActionReducers } from 'shared';\nimport {\n  TWITCH_FETCH_GAMES,\n  TWITCH_FETCH_GAMES_SUCCESS,\n  TWITCH_FETCH_GAMES_ERROR,\n  TWITCH_CLEAR_GAMES,\n} from '../actionTypes';\n\nconst games = (state = [], { type, payload }) => {\n  switch (type) {\n    case TWITCH_FETCH_GAMES_SUCCESS:\n      return uniqBy([...state, ...payload.data], 'gameId');\n    case TWITCH_CLEAR_GAMES:\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst [\n  isFetchingGames,\n  fetchedGamesSuccessfully,\n] = buildActionReducers({\n  start: TWITCH_FETCH_GAMES,\n  success: TWITCH_FETCH_GAMES_SUCCESS,\n  error: TWITCH_FETCH_GAMES_ERROR,\n  clear: TWITCH_CLEAR_GAMES,\n});\n\nexport {\n  games,\n  isFetchingGames,\n  fetchedGamesSuccessfully,\n};\n","import { uniqBy } from 'lodash';\nimport { combineReducers } from 'redux';\nimport { buildActionReducers } from 'shared';\nimport {\n  TWITCH_FETCH_VIDEOS,\n  TWITCH_FETCH_VIDEOS_SUCCESS,\n  TWITCH_FETCH_VIDEOS_ERROR,\n  TWITCH_CLEAR_VIDEOS,\n} from '../actionTypes';\n\nconst list = (state = [], { type, payload }) => {\n  switch (type) {\n    case TWITCH_FETCH_VIDEOS_SUCCESS:\n      return uniqBy([...state, ...payload.data], 'videoId');\n    case TWITCH_CLEAR_VIDEOS:\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst cursor = (state = null, { type, payload }) => {\n  switch (type) {\n    case TWITCH_FETCH_VIDEOS_SUCCESS:\n      return (payload.pagination && payload.pagination.cursor) || state;\n    case TWITCH_CLEAR_VIDEOS:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst fetchedAll = (state = false, { type, payload }) => {\n  switch (type) {\n    case TWITCH_FETCH_VIDEOS_SUCCESS:\n      return !(payload.pagination && payload.pagination.cursor);\n    case TWITCH_CLEAR_VIDEOS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst [\n  isFetchingVideos,\n  fetchedVideosSuccessfully,\n] = buildActionReducers({\n  start: TWITCH_FETCH_VIDEOS,\n  success: TWITCH_FETCH_VIDEOS_SUCCESS,\n  error: TWITCH_FETCH_VIDEOS_ERROR,\n  clear: TWITCH_CLEAR_VIDEOS,\n});\n\nconst videos = combineReducers({\n  list,\n  cursor,\n  fetchedAll,\n});\n\nexport {\n  videos,\n  isFetchingVideos,\n  fetchedVideosSuccessfully,\n};\n","import { TWITCH_SET_CHANNEL, TWITCH_CLEAR_CHANNEL } from '../actionTypes';\n\nconst channel = (state = null, { type, selectedChannel }) => {\n  switch (type) {\n    case TWITCH_SET_CHANNEL:\n      return selectedChannel;\n    case TWITCH_CLEAR_CHANNEL:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default channel;\n","import { TWITCH_SET_VIDEO, TWITCH_CLEAR_VIDEO } from '../actionTypes';\n\nconst video = (state = null, { type, selectedVideo }) => {\n  switch (type) {\n    case TWITCH_SET_VIDEO:\n      return selectedVideo;\n    case TWITCH_CLEAR_VIDEO:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default video;\n","import { TWITCH_SET_SHOW_CHAT_STATE } from '../actionTypes';\n\nconst showChat = (state = true, { type, show }) => {\n  switch (type) {\n    case TWITCH_SET_SHOW_CHAT_STATE:\n      return show;\n    default:\n      return state;\n  }\n};\n\nexport default showChat;\n","import { TWITCH_SET_SHOW_VIDEOS_STATE } from '../actionTypes';\n\nconst showVideos = (state = false, { type, show }) => {\n  switch (type) {\n    case TWITCH_SET_SHOW_VIDEOS_STATE:\n      return show;\n    default:\n      return state;\n  }\n};\n\nexport default showVideos;\n","const AUTH_PROTOCOL = process.env.REACT_APP_TWITCH_AUTH_PROTOCOL || 'https';\nconst AUTH_HOST = process.env.REACT_APP_TWITCH_AUTH_HOST || 'id.twitch.tv';\nconst AUTH_PORT = process.env.REACT_APP_TWITCH_AUTH_PORT || '443';\n\nconst HELIX_PROTOCOL = process.env.REACT_APP_TWITCH_HELIX_PROTOCOL || 'https';\nconst HELIX_HOST = process.env.REACT_APP_TWITCH_HELIX_HOST || 'api.twitch.tv';\nconst HELIX_PORT = process.env.REACT_APP_TWITCH_HELIX_PORT || '443';\n\nexport const TWITCH_AUTHORIZATION_URL = `${AUTH_PROTOCOL}://${AUTH_HOST}:${AUTH_PORT}/oauth2/authorize`;\nexport const TWITCH_API_URL = `${HELIX_PROTOCOL}://${HELIX_HOST}:${HELIX_PORT}/helix`;\n\nexport const TWITCH_USERS_URL = `${TWITCH_API_URL}/users`;\nexport const TWITCH_USERS_FOLLOWS_URL = `${TWITCH_USERS_URL}/follows`;\nexport const TWITCH_STREAMS_URL = `${TWITCH_API_URL}/streams`;\nexport const TWITCH_GAMES_URL = `${TWITCH_API_URL}/games`;\nexport const TWITCH_VIDEOS_URL = `${TWITCH_API_URL}/videos`;\n\nexport const TWITCH_PLAYER_SCRIPT_URL = 'https://player.twitch.tv/js/embed/v1.js';\nexport const TWITCH_CHAT_URL = 'https://www.twitch.tv/embed/%{channel}/chat?parent=%{parent}&darkpopout';\n\nexport const TWITCH_PLAYER_SCRIPT_ID = 'twitch-player-script';\n\nexport const TWITCH_DEFAULT_REFRESH_INTERVAL = 60 * 1000;\n\nexport const TWITCH_STREAM_TYPE_LIVE = 'live';\n\nexport const PUBLIC_URL = process.env.PUBLIC_URL || '';\nexport const PUBLIC_DOMAIN = process.env.REACT_APP_PUBLIC_DOMAIN || 'localhost';\n","import { TWITCH_DEFAULT_REFRESH_INTERVAL } from '../constants';\nimport { TWITCH_SET_REFRESH_INTERVAL } from '../actionTypes';\n\nconst refreshInterval = (state = TWITCH_DEFAULT_REFRESH_INTERVAL, { type, interval }) => {\n  switch (type) {\n    case TWITCH_SET_REFRESH_INTERVAL:\n      return interval;\n    default:\n      return state;\n  }\n};\n\nexport default refreshInterval;\n","import {\n  TWITCH_FETCH_USER_ERROR,\n  TWITCH_FETCH_FOLLOWED_IDS_ERROR,\n  TWITCH_FETCH_FOLLOWED_USERS_ERROR,\n  TWITCH_FETCH_STREAMS_ERROR,\n  TWITCH_FETCH_GAMES_ERROR,\n  TWITCH_CLEAR_ERRORS,\n} from '../actionTypes';\n\nconst errors = (state = {}, { type, error }) => {\n  switch (type) {\n    case TWITCH_FETCH_USER_ERROR:\n      return { ...state, user: error };\n    case TWITCH_FETCH_FOLLOWED_IDS_ERROR:\n      return { ...state, followedIds: error };\n    case TWITCH_FETCH_FOLLOWED_USERS_ERROR:\n      return { ...state, followed: error };\n    case TWITCH_FETCH_STREAMS_ERROR:\n      return { ...state, streams: error };\n    case TWITCH_FETCH_GAMES_ERROR:\n      return { ...state, games: error };\n    case TWITCH_CLEAR_ERRORS:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default errors;\n","import { throttle, pick } from 'lodash';\nimport { utils } from 'shared';\n\nconst LOCAL_STORAGE_STATE_KEY = 'state';\n\nexport const getInitialState = () => utils.loadFromLocalStorage(LOCAL_STORAGE_STATE_KEY) || {};\n\nexport const enableStatePersistence = (store, configuration) => store\n  .subscribe(throttle(\n    () => utils.saveInLocalStorage(LOCAL_STORAGE_STATE_KEY, pick(store.getState(), configuration)),\n    100,\n  ));\n","import { combineReducers } from 'redux';\nimport token from './token';\nimport {\n  user,\n  isFetchingUser,\n  fetchedUserSuccessfully,\n} from './user';\nimport {\n  followedIds,\n  isFetchingFollowedIds,\n  fetchedFollowedIdsSuccessfully,\n} from './followedIds';\nimport {\n  followed,\n  isFetchingFollowed,\n  fetchedFollowedSuccessfully,\n} from './followed';\nimport {\n  streams,\n  isFetchingStreams,\n  fetchedStreamsSuccessfully,\n} from './streams';\nimport {\n  games,\n  isFetchingGames,\n  fetchedGamesSuccessfully,\n} from './games';\nimport {\n  videos,\n  isFetchingVideos,\n  fetchedVideosSuccessfully,\n} from './videos';\nimport channel from './channel';\nimport video from './video';\nimport showChat from './showChat';\nimport showVideos from './showVideos';\nimport refreshInterval from './refreshInterval';\nimport errors from './errors';\n\nconst twitch = combineReducers({\n  token,\n  user,\n  isFetchingUser,\n  fetchedUserSuccessfully,\n  followedIds,\n  isFetchingFollowedIds,\n  fetchedFollowedIdsSuccessfully,\n  followed,\n  isFetchingFollowed,\n  fetchedFollowedSuccessfully,\n  streams,\n  isFetchingStreams,\n  fetchedStreamsSuccessfully,\n  games,\n  isFetchingGames,\n  fetchedGamesSuccessfully,\n  videos,\n  isFetchingVideos,\n  fetchedVideosSuccessfully,\n  channel,\n  video,\n  showChat,\n  showVideos,\n  refreshInterval,\n  errors,\n});\n\nexport default twitch;\n","import { combineReducers } from 'redux';\nimport { SIDEBAR_SET_STATE } from './actionTypes';\n\nconst isOpen = (state = false, { type, open }) => {\n  switch (type) {\n    case SIDEBAR_SET_STATE:\n      return open;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  isOpen,\n});\n","export const SIDEBAR_SET_STATE = 'SIDEBAR_SET_STATE';\n","import { combineReducers } from 'redux';\nimport twitch from 'twitch/reducers';\nimport sidebar from 'sidebar/reducers';\n\nexport default combineReducers({\n  twitch,\n  sidebar,\n});\n","const persistenceConfiguration = [\n  'twitch.token',\n  'twitch.channel',\n  'twitch.video',\n  'twitch.showChat',\n  'twitch.refreshInterval',\n];\n\nexport default persistenceConfiguration;\n","import { rootReducer, persistenceConfiguration } from 'rootReducer';\nimport { getInitialState, enableStatePersistence } from './persistence';\nimport configureStore from './configureStore';\n\nconst initialState = getInitialState();\nconst store = configureStore(rootReducer, initialState);\nenableStatePersistence(store, persistenceConfiguration);\n\nexport default store;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst configureStore = (rootReducer, initialState) => {\n  const enhancers = [\n    applyMiddleware(thunk),\n  ];\n\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composedEnhancers,\n  );\n\n  return store;\n};\n\nexport default configureStore;\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#212121',\n      light: '#484848',\n      dark: '#000000',\n    },\n    secondary: {\n      main: '#4a148c',\n      light: '#7c43bd',\n      dark: '#12005e',\n    },\n    background: {\n      default: '#000000',\n      paper: '#080808',\n      dark: '#161616',\n    },\n    text: {\n      primary: '#ffffff',\n      secondary: '#aaaaaa',\n    },\n  },\n  zIndex: {\n    progress: 2000,\n  },\n});\n\nexport default theme;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  makeStyles,\n  AppBar,\n  IconButton,\n  Toolbar,\n} from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n  appBar: {\n    maxWidth: '100vw',\n  },\n});\n\nconst Header = ({ children, toggleSidebar }) => {\n  const styles = useStyles();\n\n  return (\n    <AppBar position=\"sticky\" className={styles.appBar}>\n      <Toolbar variant=\"dense\">\n        <IconButton color=\"inherit\" onClick={toggleSidebar}>\n          <Menu />\n        </IconButton>\n        {children}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nHeader.defaultProps = {\n  children: null,\n  toggleSidebar: () => {},\n};\n\nHeader.propTypes = {\n  children: PropTypes.node,\n  toggleSidebar: PropTypes.func,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { SwipeableDrawer } from '@material-ui/core';\n\nconst Sidebar = ({ children, isOpen, setOpen }) => (\n  <SwipeableDrawer\n    disableBackdropTransition\n    keepMounted\n    open={isOpen}\n    onOpen={() => setOpen(true)}\n    onClose={() => setOpen(false)}\n    ModalProps={{ keepMounted: true }}\n  >\n    {children}\n  </SwipeableDrawer>\n);\n\nSidebar.defaultProps = {\n  children: null,\n};\n\nSidebar.propTypes = {\n  children: PropTypes.node,\n  isOpen: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n};\n\nexport default Sidebar;\n","import { buildActionCreator } from 'shared';\nimport { SIDEBAR_SET_STATE } from '../actionTypes';\n\nconst sidebarSetState = buildActionCreator(SIDEBAR_SET_STATE, 'open');\n\nexport const setSidebarState = (state) => (dispatch) => dispatch(sidebarSetState(state));\n\nexport const toggleSidebarState = () => (dispatch, getState) => {\n  const { sidebar: { isOpen } } = getState();\n\n  return dispatch(sidebarSetState(!isOpen));\n};\n","import { connect } from 'react-redux';\nimport { setSidebarState } from './actions';\nimport Sidebar from './Sidebar';\n\nconst mapStateToProps = ({ sidebar: { isOpen } }) => ({ isOpen });\n\nconst mapDispatchToProps = (dispatch) => ({\n  setOpen: (state) => dispatch(setSidebarState(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import { connect } from 'react-redux';\nimport { sidebarActions } from 'sidebar';\nimport Header from './Header';\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleSidebar: () => dispatch(sidebarActions.toggleSidebarState()),\n});\n\nexport default connect(null, mapDispatchToProps)(Header);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { HeaderContainer } from 'shared/header';\nimport { SidebarContainer } from 'sidebar';\n\nconst useStyles = makeStyles({\n  app: {\n    width: '100%',\n    height: '100%',\n    display: 'grid',\n    gridTemplateRows: 'auto 1fr',\n  },\n});\n\nconst Layout = ({\n  children,\n  header,\n  sidebar,\n  sidebarHeader,\n}) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.app}>\n      <HeaderContainer>\n        {header}\n      </HeaderContainer>\n      {children}\n      <SidebarContainer>\n        <HeaderContainer>\n          {sidebarHeader}\n        </HeaderContainer>\n        {sidebar}\n      </SidebarContainer>\n    </div>\n  );\n};\n\nLayout.defaultProps = {\n  children: null,\n  header: null,\n  sidebar: null,\n  sidebarHeader: null,\n};\n\nLayout.propTypes = {\n  children: PropTypes.node,\n  header: PropTypes.node,\n  sidebar: PropTypes.node,\n  sidebarHeader: PropTypes.node,\n};\n\nexport default Layout;\n","import { buildActionCreator } from 'shared';\nimport { TWITCH_SAVE_TOKEN, TWITCH_CLEAR_TOKEN } from '../actionTypes';\n\nexport const saveToken = buildActionCreator(TWITCH_SAVE_TOKEN, 'newToken');\nexport const clearToken = buildActionCreator(TWITCH_CLEAR_TOKEN);\n","import { messages } from 'shared';\n\n/* eslint-disable camelcase */\nconst transformUser = ({\n  id,\n  login,\n  display_name,\n  profile_image_url,\n}) => ({\n  userId: Number(id),\n  login,\n  name: display_name,\n  avatarUrl: profile_image_url,\n});\n\nconst transformStream = ({\n  game_id,\n  title,\n  type,\n  user_id,\n  viewer_count,\n}) => ({\n  userId: Number(user_id),\n  title,\n  type,\n  gameId: Number(game_id),\n  viewers: Number(viewer_count),\n});\n\nconst transformGame = ({\n  id,\n  name,\n}) => ({\n  gameId: Number(id),\n  gameTitle: name,\n});\n\nconst transformVideo = ({\n  created_at,\n  description,\n  duration,\n  id,\n  published_at,\n  thumbnail_url,\n  title,\n  user_id,\n  view_count,\n}) => ({\n  videoId: Number(id),\n  userId: Number(user_id),\n  title,\n  description,\n  duration,\n  createdAt: created_at,\n  publishedAt: published_at,\n  viewCount: Number(view_count),\n  thumbnailUrl: thumbnail_url,\n});\n\n\nexport const transformError = ({\n  error,\n  status,\n  message,\n}) => ({\n  errorType: `${messages.en.twitch.error}: ${error}`,\n  status: Number(status),\n  message,\n});\n\nexport const transformUsers = (data) => data.map((user) => transformUser(user));\nexport const transformUsersFollows = (data) => data.map((item) => Number(item.to_id));\nexport const transformStreams = (data) => data.map((stream) => transformStream(stream));\nexport const transformGames = (data) => data.map((game) => transformGame(game));\nexport const transformVideos = (data) => data.map((video) => transformVideo(video));\n\nexport const filterAndTransformGameIds = (streams, games) => streams\n  .filter(({ gameId }) => !games.find((game) => gameId === game.gameId))\n  .filter(({ gameId }) => gameId !== 0)\n  .map(({ gameId }) => gameId);\n","import { buildActionCreator, buildRequestActionCreator } from 'shared';\nimport { getTwitchClientID } from '../utils';\nimport { TWITCH_CLEAR_ERRORS } from '../actionTypes';\nimport { transformError } from '../transform';\n\nexport const clearErrors = buildActionCreator(TWITCH_CLEAR_ERRORS);\n\nexport const buildTwitchRequestActionCreator = (options) => (dispatch, getState) => {\n  const { twitch: { token } } = getState();\n\n  const {\n    headers,\n    transform,\n    ...optionParams\n  } = options;\n\n  const twitchHeaders = {\n    'Client-ID': getTwitchClientID(),\n  };\n\n  if (token) {\n    twitchHeaders.Authorization = `Bearer ${token}`;\n  }\n\n  Object.assign(twitchHeaders, headers);\n\n  const transformFunction = ({\n    data,\n    ...other\n  }) => ({\n    data: transform(data),\n    ...other,\n  });\n\n  const combineFunction = (list) => list.reduce((prev, next) => ({\n    data: [...prev.data, ...next.data],\n  }), { data: [] });\n\n  return dispatch(buildRequestActionCreator({\n    ...optionParams,\n    headers: twitchHeaders,\n    transform: transformFunction,\n    combine: combineFunction,\n    transformError,\n  }));\n};\n","import moment from 'moment';\nimport 'moment-duration-format';\nimport { utils, messages } from 'shared';\nimport {\n  PUBLIC_DOMAIN,\n  PUBLIC_URL,\n  TWITCH_AUTHORIZATION_URL,\n  TWITCH_CHAT_URL,\n  TWITCH_PLAYER_SCRIPT_ID,\n  TWITCH_PLAYER_SCRIPT_URL,\n  TWITCH_STREAM_TYPE_LIVE,\n} from './constants';\n\nexport const getTwitchClientID = () => process.env.REACT_APP_TWITCH_CLIENT_ID;\nexport const getRedirectUrl = () => `${new URL(window.location.href).origin}${PUBLIC_URL}`;\nexport const getAuthorizationUrl = () => `${TWITCH_AUTHORIZATION_URL}?${utils.createQueryParameters({\n  client_id: getTwitchClientID(),\n  redirect_uri: getRedirectUrl(),\n  response_type: 'token',\n})}`;\n\nexport const getChatUrl = (channel) => TWITCH_CHAT_URL.replace('%{channel}', channel).replace('%{parent}', PUBLIC_DOMAIN);\nexport const getThumbnailUrl = (thumbnail, width, height) => thumbnail.replace('%{width}', width).replace('%{height}', height);\n\nexport const getDurationText = (duration) => moment.duration(`PT${duration}`.toUpperCase()).format('HH:mm:ss');\nexport const getViewCountText = (viewCount) => `${viewCount} ${messages.en.twitch.labels.views}`;\nexport const getPublishedAtText = (publishedAt) => moment(publishedAt).fromNow();\n\nexport const isStreamLive = (type) => type === TWITCH_STREAM_TYPE_LIVE;\n\nexport const loadTwitchPlayer = () => new Promise((resolve) => {\n  const scriptExists = Boolean(document.getElementById(TWITCH_PLAYER_SCRIPT_ID));\n  if (!scriptExists) {\n    const script = document.createElement('script');\n    script.setAttribute('src', TWITCH_PLAYER_SCRIPT_URL);\n    script.setAttribute('id', TWITCH_PLAYER_SCRIPT_ID);\n    script.addEventListener('load', resolve);\n    document.body.appendChild(script);\n  } else {\n    resolve();\n  }\n});\n","import { buildActionCreator } from 'shared';\nimport { buildTwitchRequestActionCreator } from './common';\nimport { TWITCH_FETCH_USER, TWITCH_CLEAR_USER } from '../actionTypes';\nimport { TWITCH_USERS_URL } from '../constants';\nimport { transformUsers } from '../transform';\n\nexport const fetchUsers = (options) => (dispatch) => (\n  dispatch(buildTwitchRequestActionCreator({\n    ...options,\n    url: TWITCH_USERS_URL,\n    transform: transformUsers,\n  }))\n);\n\nexport const clearUser = buildActionCreator(TWITCH_CLEAR_USER);\n\nexport const fetchUser = () => (dispatch, getState) => {\n  const { twitch: { token } } = getState();\n\n  if (!token) {\n    return null;\n  }\n\n  return dispatch(fetchUsers({\n    baseAction: TWITCH_FETCH_USER,\n  }));\n};\n","import { chunk } from 'lodash';\nimport { buildActionCreator } from 'shared';\nimport { buildTwitchRequestActionCreator } from './common';\nimport { fetchUsers } from './fetchUsers';\nimport { TWITCH_USERS_FOLLOWS_URL } from '../constants';\nimport {\n  TWITCH_FETCH_FOLLOWED_IDS,\n  TWITCH_CLEAR_FOLLOWED_IDS,\n  TWITCH_FETCH_FOLLOWED_USERS,\n  TWITCH_CLEAR_FOLLOWED_USERS,\n} from '../actionTypes';\nimport { transformUsersFollows } from '../transform';\n\nexport const clearFollowedIds = buildActionCreator(TWITCH_CLEAR_FOLLOWED_IDS);\nexport const clearFollowedUsers = buildActionCreator(TWITCH_CLEAR_FOLLOWED_USERS);\nexport const clearFollowed = () => (dispatch) => {\n  dispatch(clearFollowedIds());\n  dispatch(clearFollowedUsers());\n};\n\nexport const fetchFollowedIds = () => (dispatch, getState) => {\n  const { twitch: { user: { userId }, followedIds: { cursor } } } = getState();\n\n  if (!userId) {\n    return null;\n  }\n\n  return dispatch(buildTwitchRequestActionCreator({\n    baseAction: TWITCH_FETCH_FOLLOWED_IDS,\n    url: TWITCH_USERS_FOLLOWS_URL,\n    query: { from_id: userId, first: 100, after: cursor },\n    transform: transformUsersFollows,\n  }));\n};\n\nexport const fetchFollowedUsers = () => (dispatch, getState) => {\n  const { twitch: { followedIds: { list }, followed } } = getState();\n\n  const filteredUsers = list.filter((id) => !followed.find(({ userId }) => userId === id));\n\n  if (filteredUsers.length === 0) {\n    return null;\n  }\n\n  return dispatch(fetchUsers({\n    baseAction: TWITCH_FETCH_FOLLOWED_USERS,\n    query: chunk(filteredUsers, 100).map((id) => ({ id })),\n  }));\n};\n\nexport const fetchFollowed = () => async (dispatch) => {\n  await dispatch(fetchFollowedIds());\n  await dispatch(fetchFollowedUsers());\n};\n","import { chunk } from 'lodash';\nimport { buildActionCreator } from 'shared';\nimport { buildTwitchRequestActionCreator } from './common';\nimport { TWITCH_GAMES_URL } from '../constants';\nimport { TWITCH_FETCH_GAMES, TWITCH_CLEAR_GAMES } from '../actionTypes';\nimport { transformGames, filterAndTransformGameIds } from '../transform';\n\nexport const clearGames = buildActionCreator(TWITCH_CLEAR_GAMES);\n\nexport const fetchGames = () => (dispatch, getState) => {\n  const { twitch: { streams, games } } = getState();\n\n  const filteredGames = filterAndTransformGameIds(streams, games);\n\n  if (filteredGames.length === 0) {\n    return null;\n  }\n\n  return dispatch(buildTwitchRequestActionCreator({\n    baseAction: TWITCH_FETCH_GAMES,\n    url: TWITCH_GAMES_URL,\n    query: chunk(filteredGames, 100).map((ids) => ({ id: ids })),\n    transform: transformGames,\n  }));\n};\n","import { chunk } from 'lodash';\nimport { buildActionCreator } from 'shared';\nimport { buildTwitchRequestActionCreator } from './common';\nimport { fetchGames } from './fetchGames';\nimport { TWITCH_STREAMS_URL } from '../constants';\nimport { TWITCH_FETCH_STREAMS, TWITCH_CLEAR_STREAMS } from '../actionTypes';\nimport { transformStreams } from '../transform';\n\nexport const clearStreams = buildActionCreator(TWITCH_CLEAR_STREAMS);\n\nexport const fetchStreams = () => (dispatch, getState) => {\n  const { twitch: { followedIds: { list } } } = getState();\n\n  if (list.length === 0) {\n    return null;\n  }\n\n  return dispatch(buildTwitchRequestActionCreator({\n    baseAction: TWITCH_FETCH_STREAMS,\n    url: TWITCH_STREAMS_URL,\n    query: chunk(list, 100).map((ids) => ({ user_id: ids })),\n    transform: transformStreams,\n  }))\n    .then(() => dispatch(fetchGames()));\n};\n","import { createSelector } from 'reselect';\nimport { utils } from 'shared';\n\nexport const getChannel = (twitch) => twitch.channel;\nexport const getFollowed = (twitch) => twitch.followed;\nexport const getStreams = (twitch) => twitch.streams;\nexport const getGames = (twitch) => twitch.games;\n\nexport const getSelectedChannel = createSelector(\n  getChannel,\n  getFollowed,\n  (channel, followed) => followed.find(({ login }) => login === channel) || {},\n);\n\nexport const getSelectedStream = createSelector(\n  getSelectedChannel,\n  getStreams,\n  (selectedChannel, streams) => streams\n    .find(({ userId }) => userId === selectedChannel.userId) || {},\n);\n\nexport const getChannelAvatarUrl = createSelector(\n  getSelectedChannel,\n  (selectedChannel) => selectedChannel.avatarUrl,\n);\n\nexport const getChannelName = createSelector(\n  getSelectedChannel,\n  (selectedChannel) => selectedChannel.name,\n);\n\nexport const getStreamTitle = createSelector(\n  getSelectedStream,\n  (selectedStream) => selectedStream.title,\n);\n\nexport const getStreamsWithGames = createSelector(\n  getStreams,\n  getGames,\n  (streams, games) => utils.mergeBy(streams, games, 'gameId'),\n);\n\nexport const getChannels = createSelector(\n  getFollowed,\n  getStreamsWithGames,\n  (followed, streams) => utils.sortDescBy(utils.mergeBy(followed, streams, 'userId'), 'viewers'),\n);\n","import { buildActionCreator } from 'shared';\nimport { buildTwitchRequestActionCreator } from './common';\nimport { TWITCH_VIDEOS_URL } from '../constants';\nimport { TWITCH_FETCH_VIDEOS, TWITCH_CLEAR_VIDEOS } from '../actionTypes';\nimport { transformVideos } from '../transform';\nimport { getSelectedChannel } from '../selectors';\n\nexport const clearVideos = buildActionCreator(TWITCH_CLEAR_VIDEOS);\n\nexport const fetchVideos = () => (dispatch, getState) => {\n  const { twitch } = getState();\n\n  const { userId } = getSelectedChannel(twitch);\n\n  if (!userId) {\n    return null;\n  }\n\n  const { videos: { cursor } } = twitch;\n\n  return dispatch(buildTwitchRequestActionCreator({\n    baseAction: TWITCH_FETCH_VIDEOS,\n    url: TWITCH_VIDEOS_URL,\n    query: { user_id: userId, first: 50, after: cursor },\n    transform: transformVideos,\n  }));\n};\n","import { buildActionCreator } from 'shared';\nimport { TWITCH_SET_CHANNEL, TWITCH_CLEAR_CHANNEL } from '../actionTypes';\n\nexport const setChannel = buildActionCreator(TWITCH_SET_CHANNEL, 'selectedChannel');\nexport const clearChannel = buildActionCreator(TWITCH_CLEAR_CHANNEL);\n","import { buildActionCreator } from 'shared';\nimport { TWITCH_SET_VIDEO, TWITCH_CLEAR_VIDEO } from '../actionTypes';\n\nexport const setVideo = (video) => buildActionCreator(TWITCH_SET_VIDEO, 'selectedVideo')(`v${video}`);\nexport const clearVideo = buildActionCreator(TWITCH_CLEAR_VIDEO);\n","import { clearToken } from './saveToken';\nimport { clearUser } from './fetchUsers';\nimport { clearFollowed } from './fetchFollowed';\nimport { clearStreams } from './fetchStreams';\nimport { clearGames } from './fetchGames';\nimport { clearVideos } from './fetchVideos';\nimport { clearChannel } from './setChannel';\nimport { clearVideo } from './setVideo';\nimport { getAuthorizationUrl } from '../utils';\n\nexport const twitchLogin = () => () => {\n  window.location.replace(getAuthorizationUrl());\n};\n\nexport const twitchLogout = () => (dispatch) => {\n  dispatch(clearToken());\n  dispatch(clearUser());\n  dispatch(clearFollowed());\n  dispatch(clearStreams());\n  dispatch(clearGames());\n  dispatch(clearVideos());\n  dispatch(clearChannel());\n  dispatch(clearVideo());\n};\n","import { fetchUser, clearUser } from './fetchUsers';\nimport { fetchFollowed, clearFollowed } from './fetchFollowed';\nimport { fetchStreams, clearStreams } from './fetchStreams';\nimport { clearGames } from './fetchGames';\nimport { clearVideos } from './fetchVideos';\n\nexport const fetchAll = () => async (dispatch) => {\n  await dispatch(fetchUser());\n  await dispatch(fetchFollowed());\n  await dispatch(fetchStreams());\n};\n\nexport const clearAll = () => (dispatch) => {\n  dispatch(clearUser());\n  dispatch(clearFollowed());\n  dispatch(clearStreams());\n  dispatch(clearGames());\n  dispatch(clearVideos());\n};\n","import { buildActionCreator } from 'shared';\nimport { TWITCH_SET_REFRESH_INTERVAL } from '../actionTypes';\n\nexport const setRefreshInterval = buildActionCreator(TWITCH_SET_REFRESH_INTERVAL, 'interval');\n","import { buildActionCreator } from 'shared';\nimport { TWITCH_SET_SHOW_CHAT_STATE } from '../actionTypes';\n\nconst appSetShowChatState = buildActionCreator(TWITCH_SET_SHOW_CHAT_STATE, 'show');\n\nexport const setShowChatState = (state) => (dispatch) => dispatch(appSetShowChatState(state));\n\nexport const toggleShowChatState = () => (dispatch, getState) => {\n  const { twitch: { showChat } } = getState();\n\n  return dispatch(appSetShowChatState(!showChat));\n};\n","import { buildActionCreator } from 'shared';\nimport { TWITCH_SET_SHOW_VIDEOS_STATE } from '../actionTypes';\n\nconst appSetShowVideosState = buildActionCreator(TWITCH_SET_SHOW_VIDEOS_STATE, 'show');\n\nexport const setShowVideosState = (state) => (dispatch) => dispatch(appSetShowVideosState(state));\n\nexport const toggleShowVideosState = () => (dispatch, getState) => {\n  const { twitch: { showVideos } } = getState();\n\n  return dispatch(appSetShowVideosState(!showVideos));\n};\n","import PropTypes from 'prop-types';\n\nexport const channel = {\n  avatarUrl: PropTypes.string,\n  gameTitle: PropTypes.string,\n  login: PropTypes.string,\n  name: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  userId: PropTypes.number,\n  viewers: PropTypes.number,\n};\nexport const channelType = PropTypes.shape(channel);\nexport const channelsType = PropTypes.arrayOf(channelType);\n\nexport const video = {\n  videoId: PropTypes.number,\n  userId: PropTypes.number,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  duration: PropTypes.string,\n  createdAt: PropTypes.string,\n  publishedAt: PropTypes.string,\n  viewCount: PropTypes.number,\n  thumbnailUrl: PropTypes.string,\n};\nexport const videoType = PropTypes.shape(video);\nexport const videosType = PropTypes.arrayOf(videoType);\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { loadTwitchPlayer } from '../utils';\n\nconst useStyles = makeStyles({\n  player: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    '& iframe': {\n      width: '100%',\n      height: '100%',\n    },\n  },\n});\n\nconst TwitchPlayer = ({ channel, targetID, video }) => {\n  const [player, setPlayer] = useState(null);\n  const classes = useStyles();\n\n  const initPlayer = useCallback(async () => {\n    await loadTwitchPlayer();\n    if (!player) {\n      setPlayer(new window.Twitch.Player(targetID, { video, channel }));\n    }\n  }, [targetID, player, video, channel]);\n\n  useEffect(() => {\n    initPlayer();\n  }, [initPlayer]);\n\n  useEffect(() => {\n    if (player) {\n      if (video) {\n        player.setVideo(video);\n      } else if (channel) {\n        player.setChannel(channel);\n      } else {\n        player.pause();\n      }\n    }\n  }, [player, video, channel]);\n\n  return (\n    <div id={targetID} className={classes.player} />\n  );\n};\n\nTwitchPlayer.defaultProps = {\n  channel: null,\n  targetID: 'twitch-player',\n  video: null,\n};\n\nTwitchPlayer.propTypes = {\n  channel: PropTypes.string,\n  targetID: PropTypes.string,\n  video: PropTypes.string,\n};\n\nexport default TwitchPlayer;\n","import { connect } from 'react-redux';\nimport TwitchPlayer from './TwitchPlayer';\n\nconst mapStateToProps = ({ twitch: { channel, video } }) => ({ channel, video });\n\nexport default connect(mapStateToProps)(TwitchPlayer);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { getChatUrl } from '../utils';\n\nconst useStyles = makeStyles({\n  chat: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n});\n\nconst TwitchChat = ({ channel, title }) => {\n  const styles = useStyles();\n  const url = getChatUrl(channel);\n\n  return (\n    <iframe className={styles.chat} frameBorder=\"0\" src={url} title={title} />\n  );\n};\n\nTwitchChat.defaultProps = {\n  channel: null,\n  title: 'twitch-chat',\n};\n\nTwitchChat.propTypes = {\n  channel: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default TwitchChat;\n","import { connect } from 'react-redux';\nimport TwitchChat from './TwitchChat';\n\nconst mapStateToProps = ({ twitch: { channel } }) => ({ channel });\n\nexport default connect(mapStateToProps)(TwitchChat);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { TwitchPlayerContainer } from '../player';\nimport { TwitchChatContainer } from '../chat';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    height: '100%',\n    display: 'flex',\n    flexFlow: 'row',\n    '@media screen and (orientation:portrait)': {\n      flexFlow: 'column',\n    },\n  },\n  playerContainer: {\n    flexGrow: 1,\n    '@media screen and (orientation:portrait)': {\n      flexGrow: 0,\n      position: 'relative',\n      paddingTop: 'calc(100% / (16/9))',\n      '& div': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n      },\n    },\n  },\n  chatContainer: {\n    minWidth: '335px',\n    flexGrow: 0,\n    '@media screen and (orientation:portrait)': {\n      flexGrow: 1,\n    },\n  },\n}));\n\nconst PlayerWithChat = ({ isVisible, showChat }) => {\n  const styles = useStyles();\n\n  return isVisible && (\n    <div className={styles.container}>\n      <div className={styles.playerContainer}>\n        <TwitchPlayerContainer />\n      </div>\n      {showChat && (\n        <div className={styles.chatContainer}>\n          <TwitchChatContainer />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPlayerWithChat.defaultProps = {\n  isVisible: false,\n  showChat: true,\n};\n\nPlayerWithChat.propTypes = {\n  isVisible: PropTypes.bool,\n  showChat: PropTypes.bool,\n};\n\nexport default PlayerWithChat;\n","import { connect } from 'react-redux';\nimport PlayerWithChat from './PlayerWithChat';\n\nconst mapStateToProps = ({\n  twitch: {\n    channel,\n    showChat,\n  },\n}) => ({\n  isVisible: Boolean(channel),\n  showChat,\n});\n\nexport default connect(mapStateToProps)(PlayerWithChat);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '1px 5px',\n    position: 'absolute',\n    opacity: 0.8,\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.common.black,\n  },\n  typography: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst VideoThumbnailLabel = ({\n  bottom,\n  children,\n  left,\n  offsetHorizontal,\n  offsetVertical,\n  right,\n  top,\n}) => {\n  const styles = useStyles();\n\n  return (\n    <div\n      className={styles.container}\n      style={{\n        bottom: bottom ? offsetVertical : null,\n        left: left ? offsetHorizontal : null,\n        right: right ? offsetHorizontal : null,\n        top: top ? offsetVertical : null,\n      }}\n    >\n      <Typography\n        className={styles.typography}\n        component=\"div\"\n        variant=\"body2\"\n        color=\"textPrimary\"\n      >\n        {children}\n      </Typography>\n    </div>\n  );\n};\n\nVideoThumbnailLabel.defaultProps = {\n  bottom: false,\n  children: null,\n  left: false,\n  offsetHorizontal: '5px',\n  offsetVertical: '5px',\n  right: false,\n  top: false,\n};\n\nVideoThumbnailLabel.propTypes = {\n  children: PropTypes.node,\n  bottom: PropTypes.bool,\n  left: PropTypes.bool,\n  offsetHorizontal: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  offsetVertical: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  right: PropTypes.bool,\n  top: PropTypes.bool,\n};\n\nexport default VideoThumbnailLabel;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { AccessTime } from '@material-ui/icons';\nimport VideoThumbnailLabel from './VideoThumbnailLabel';\nimport {\n  getThumbnailUrl,\n  getDurationText,\n  getViewCountText,\n  getPublishedAtText,\n} from '../utils';\n\nconst useStyles = makeStyles(theme => ({\n  thumbnail: {\n    width: '100%',\n    height: 0,\n    position: 'relative',\n    paddingBottom: 'calc(100% / (16/9))',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: '50% 50%',\n    backgroundColor: theme.palette.grey[700],\n  },\n  labelIcon: {\n    marginRight: '5px',\n  },\n}));\n\nconst VideoThumbnail = ({\n  duration,\n  publishedAt,\n  thumbnailHeight,\n  thumbnailUrl,\n  thumbnailWidth,\n  viewCount,\n}) => {\n  const styles = useStyles();\n\n  return (\n    <div\n      className={styles.thumbnail}\n      style={{ backgroundImage: `url(${getThumbnailUrl(thumbnailUrl, thumbnailWidth, thumbnailHeight)})` }}\n    >\n      <VideoThumbnailLabel top left>\n        <AccessTime className={styles.labelIcon} fontSize=\"inherit\" />\n        {getDurationText(duration)}\n      </VideoThumbnailLabel>\n      <VideoThumbnailLabel bottom left>\n        {getViewCountText(viewCount)}\n      </VideoThumbnailLabel>\n      <VideoThumbnailLabel bottom right>\n        {getPublishedAtText(publishedAt)}\n      </VideoThumbnailLabel>\n    </div>\n  );\n};\n\nVideoThumbnail.defaultProps = {\n  duration: '',\n  publishedAt: '',\n  thumbnailHeight: 360,\n  thumbnailUrl: '',\n  thumbnailWidth: 640,\n  viewCount: 0,\n};\n\nVideoThumbnail.propTypes = {\n  duration: PropTypes.string,\n  publishedAt: PropTypes.string,\n  thumbnailHeight: PropTypes.number,\n  thumbnailUrl: PropTypes.string,\n  thumbnailWidth: PropTypes.number,\n  viewCount: PropTypes.number,\n};\n\nexport default VideoThumbnail;\n","\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ButtonBase, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport * as twitchTypes from '../types';\nimport VideoThumbnail from './VideoThumbnail';\n\nconst useStyles = makeStyles(theme => ({\n  tile: {\n    display: 'grid',\n    overflow: 'hidden',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.dark,\n    boxShadow: theme.shadows[8],\n    gridTemplateColumns: '1fr',\n  },\n  title: {\n    width: '100%',\n    padding: `${theme.spacing(0.5)}px ${theme.spacing(1.25)}px`,\n    textAlign: 'left',\n  },\n}));\n\nconst VideoTile = ({ className, onVideoClick, video }) => {\n  const styles = useStyles();\n\n  const {\n    duration,\n    publishedAt,\n    thumbnailUrl,\n    title,\n    videoId,\n    viewCount,\n  } = video;\n\n  return (\n    <ButtonBase\n      className={classnames(className, styles.tile)}\n      onClick={() => onVideoClick(videoId)}\n    >\n      <VideoThumbnail\n        duration={duration}\n        publishedAt={publishedAt}\n        thumbnailUrl={thumbnailUrl}\n        viewCount={viewCount}\n      />\n      <Typography className={styles.title} variant=\"body1\" color=\"textPrimary\" noWrap>\n        {title}\n      </Typography>\n    </ButtonBase>\n  );\n};\n\nVideoTile.defaultProps = {\n  className: null,\n  onVideoClick: () => {},\n  video: {},\n};\n\nVideoTile.propTypes = {\n  className: PropTypes.string,\n  onVideoClick: PropTypes.func,\n  video: twitchTypes.videoType,\n};\n\nexport default VideoTile;\n","import { connect } from 'react-redux';\nimport VideoTile from './VideoTile';\nimport { setShowVideosState, setVideo } from '../actions';\n\nconst mapDispatchToProps = (dispatch) => ({\n  onVideoClick: (videoId) => {\n    dispatch(setShowVideosState(false));\n    dispatch(setVideo(videoId));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(VideoTile);\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Loader } from 'shared';\nimport VideoTileContainer from './VideoTileContainer';\nimport * as twitchTypes from '../types';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    height: '100%',\n    position: 'relative',\n    overflowY: 'auto',\n    backgroundColor: theme.palette.background.paper,\n  },\n  videos: {\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(380px, 1fr))',\n  },\n  tile: {\n    margin: theme.spacing(2),\n    marginTop: 0,\n  },\n}));\n\nconst TwitchVideos = ({\n  channel,\n  clearData,\n  fetchedAll,\n  fetchData,\n  followed,\n  isLoading,\n  videos,\n}) => {\n  const styles = useStyles();\n\n  useEffect(() => {\n    fetchData();\n    return () => {\n      clearData();\n    };\n  }, [channel, followed, fetchData, clearData]);\n\n  const handleScroll = useCallback(({ target: { scrollHeight, scrollTop, clientHeight } }) => {\n    if (((scrollHeight - scrollTop) <= (clientHeight + 100)) && !isLoading && !fetchedAll) {\n      fetchData();\n    }\n  }, [isLoading, fetchedAll, fetchData]);\n\n  const isInitialLoading = isLoading && videos.length === 0;\n  const isSubsequentLoading = isLoading && !isInitialLoading;\n\n  return (\n    <div className={styles.container} onScroll={handleScroll}>\n      <Loader variant=\"linear\" position=\"sticky\" isLoading={isSubsequentLoading} zIndex={1} />\n      <Loader variant=\"overlay\" position=\"absolute\" isLoading={isInitialLoading} zIndex={1} />\n      <div className={styles.videos}>\n        {videos.map(video => (\n          <VideoTileContainer\n            key={video.videoId}\n            className={styles.tile}\n            video={video}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nTwitchVideos.propTypes = {\n  channel: PropTypes.string.isRequired,\n  clearData: PropTypes.func.isRequired,\n  fetchedAll: PropTypes.bool.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  followed: twitchTypes.channelsType.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  videos: twitchTypes.videosType.isRequired,\n};\n\nexport default TwitchVideos;\n","import { connect } from 'react-redux';\nimport TwitchVideos from './TwitchVideos';\nimport { fetchVideos, clearVideos } from '../actions';\n\nconst mapStateToProps = ({\n  twitch: {\n    channel,\n    followed,\n    videos: {\n      list,\n      fetchedAll,\n    },\n    isFetchingVideos,\n  },\n}) => ({\n  channel,\n  followed,\n  videos: list,\n  fetchedAll,\n  isLoading: isFetchingVideos,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearData: () => dispatch(clearVideos()),\n  fetchData: () => dispatch(fetchVideos()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TwitchVideos);\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nconst TwitchLogic = ({\n  channel,\n  clearUrl,\n  fetchInitialData,\n  getToken,\n  refreshData,\n  refreshInterval,\n  refreshVideos,\n  saveToken,\n}) => {\n  useEffect(() => {\n    const token = getToken();\n    if (token) {\n      saveToken(token);\n      clearUrl();\n    }\n  }, [getToken, saveToken, clearUrl]);\n\n  useEffect(() => {\n    fetchInitialData();\n  }, [fetchInitialData]);\n\n  useEffect(() => {\n    const interval = setInterval(refreshData, refreshInterval);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [refreshData, refreshInterval]);\n\n  return null;\n};\n\nTwitchLogic.propTypes = {\n  clearUrl: PropTypes.func.isRequired,\n  fetchInitialData: PropTypes.func.isRequired,\n  getToken: PropTypes.func.isRequired,\n  refreshData: PropTypes.func.isRequired,\n  refreshInterval: PropTypes.number.isRequired,\n  refreshVideos: PropTypes.func.isRequired,\n  saveToken: PropTypes.func.isRequired,\n};\n\nexport default TwitchLogic;\n","import { connect } from 'react-redux';\nimport { utils } from 'shared';\nimport TwitchLogic from './TwitchLogic';\nimport {\n  fetchAll,\n  fetchStreams,\n  saveToken,\n  clearVideos,\n  fetchVideos,\n} from '../actions';\n\nconst mapStateToProps = ({\n  twitch: {\n    channel,\n    refreshInterval,\n  },\n}) => ({\n  channel,\n  refreshInterval,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearUrl: () => utils.removeHashAndParametersFromUrl(),\n  fetchInitialData: () => dispatch(fetchAll()),\n  getToken: () => {\n    const parameters = utils.getParamsFromHash();\n    return parameters.access_token;\n  },\n  refreshData: () => dispatch(fetchStreams()),\n  refreshVideos: () => {\n    dispatch(clearVideos());\n    dispatch(fetchVideos());\n  },\n  saveToken: (token) => dispatch(saveToken(token)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TwitchLogic);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  makeStyles,\n  Typography,\n  Slide,\n  Snackbar,\n  SnackbarContent,\n  IconButton,\n} from '@material-ui/core';\nimport { messages } from 'shared';\nimport { Error, Close, Refresh } from '@material-ui/icons';\n\nconst { unknownErrorType, unknownErrorMessage } = messages.en.errors;\n\nconst useStyles = makeStyles(theme => ({\n  error: {\n    color: theme.palette.error.contrastText,\n    backgroundColor: theme.palette.error.dark,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 30,\n    marginRight: theme.spacing(1.5),\n  },\n}));\n\nconst TwitchErrorModal = ({\n  error,\n  isModalVisible,\n  onClose,\n  onRefresh,\n}) => {\n  const styles = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      TransitionComponent={props => <Slide {...props} direction=\"down\" />}\n      open={isModalVisible}\n      onClose={onClose}\n    >\n      <SnackbarContent\n        className={styles.error}\n        message={(\n          <div className={styles.message}>\n            <Error className={styles.icon} />\n            <div>\n              <Typography variant=\"body1\">{(error && error.errorType) || unknownErrorType}</Typography>\n              <Typography variant=\"body2\">{(error && error.message) || unknownErrorMessage}</Typography>\n            </div>\n          </div>\n        )}\n        action={[\n          <IconButton key=\"refresh\" color=\"inherit\" onClick={onRefresh}>\n            <Refresh />\n          </IconButton>,\n          <IconButton key=\"close\" color=\"inherit\" onClick={onClose}>\n            <Close />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nTwitchErrorModal.defaultProps = {\n  error: null,\n};\n\nTwitchErrorModal.propTypes = {\n  error: PropTypes.shape({\n    errorType: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n  }),\n  isModalVisible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onRefresh: PropTypes.func.isRequired,\n};\n\nexport default TwitchErrorModal;\n","import { connect } from 'react-redux';\nimport TwitchErrorModal from './TwitchErrorModal';\nimport { clearErrors, clearAll, fetchAll } from '../actions';\n\nconst mapStateToProps = ({ twitch: { errors } }) => {\n  const {\n    user,\n    followedIds,\n    followed,\n    streams,\n    games,\n  } = errors;\n\n  const firstError = user || followedIds || followed || streams || games;\n\n  return {\n    error: firstError,\n    isModalVisible: Boolean(firstError),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClose: () => dispatch(clearErrors()),\n  onRefresh: () => {\n    dispatch(clearErrors());\n    dispatch(clearAll());\n    dispatch(fetchAll());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TwitchErrorModal);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Slide } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { PlayerWithChatContainer } from '../playerWithChat';\nimport { TwitchVideosContainer } from '../videos';\nimport { TwitchLogicContainer } from '../logic';\nimport { TwitchErrorModalContainer } from '../errors';\n\nconst useStyles = makeStyles({\n  container: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n  },\n  wrapper: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n});\n\nconst TwitchView = ({ showVideos }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <PlayerWithChatContainer />\n      </div>\n      <Slide mountOnEnter unmountOnExit direction=\"down\" in={showVideos}>\n        <div className={styles.wrapper}>\n          <TwitchVideosContainer />\n        </div>\n      </Slide>\n      <TwitchLogicContainer />\n      <TwitchErrorModalContainer />\n    </div>\n  );\n};\n\nTwitchView.defaultProps = {\n  showVideos: false,\n};\n\nTwitchView.propTypes = {\n  showVideos: PropTypes.bool,\n};\n\nexport default TwitchView;\n","import { connect } from 'react-redux';\nimport TwitchView from './TwitchView';\n\nconst mapStateToProps = ({ twitch: { showVideos } }) => ({ showVideos });\n\nexport default connect(mapStateToProps)(TwitchView);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { isStreamLive } from '../../utils';\nimport * as twitchTypes from '../../types';\n\nconst useStyles = makeStyles({\n  dimAvatar: {\n    filter: 'grayscale(100%) brightness(50%)',\n  },\n  container: {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column',\n    overflow: 'hidden',\n  },\n  subtitleContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 10px auto',\n  },\n});\n\nconst Channel = ({ changeChannel, channel, isSelected }) => {\n  const styles = useStyles();\n\n  const {\n    avatarUrl,\n    gameTitle,\n    login,\n    name,\n    title,\n    type,\n    viewers,\n  } = channel;\n\n  const isActive = isStreamLive(type);\n\n  return (\n    <ListItem\n      button\n      selected={isSelected}\n      onClick={() => changeChannel(login)}\n    >\n      <ListItemAvatar>\n        <Avatar className={!isActive ? styles.dimAvatar : ''} src={avatarUrl} />\n      </ListItemAvatar>\n      <div className={styles.container} title={title}>\n        <Typography variant=\"body2\" noWrap>{name}</Typography>\n        <div className={styles.subtitleContainer}>\n          <Typography variant=\"body2\" color=\"textSecondary\" noWrap>{gameTitle}</Typography>\n          <div />\n          <Typography variant=\"body2\" color=\"textSecondary\" noWrap>\n            {isActive && `🔴 ${viewers}`}\n          </Typography>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nChannel.propTypes = {\n  changeChannel: PropTypes.func.isRequired,\n  channel: twitchTypes.channelType.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n};\n\nexport default Channel;\n","import { connect } from 'react-redux';\nimport { setSidebarState } from 'sidebar/actions';\nimport Channel from './Channel';\nimport { clearVideo, setChannel } from '../../actions';\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeChannel: (channel) => {\n    dispatch(setSidebarState(false));\n    dispatch(clearVideo());\n    dispatch(setChannel(channel));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Channel);\n","import React from 'react';\nimport { List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { ChannelContainer } from './channel';\nimport * as twitchTypes from '../types';\n\nconst useStyles = makeStyles({\n  list: {\n    minWidth: '400px',\n    maxWidth: '400px',\n  },\n});\n\nconst TwitchChannels = ({ channels, selectedChannel }) => {\n  const styles = useStyles();\n\n  return (\n    <List className={styles.list} dense>\n      {channels.map(channel => (\n        <ChannelContainer\n          key={channel.userId}\n          isSelected={channel.userId === selectedChannel.userId}\n          channel={channel}\n        />\n      ))}\n    </List>\n  );\n};\n\nTwitchChannels.defaultProps = {\n  selectedChannel: {},\n};\n\nTwitchChannels.propTypes = {\n  channels: twitchTypes.channelsType.isRequired,\n  selectedChannel: twitchTypes.channelType,\n};\n\nexport default TwitchChannels;\n","import { connect } from 'react-redux';\nimport TwitchChannels from './TwitchChannels';\nimport { getChannels, getSelectedChannel } from '../selectors';\n\nconst mapStateToProps = ({ twitch }) => ({\n  channels: getChannels(twitch),\n  selectedChannel: getSelectedChannel(twitch),\n});\n\nexport default connect(mapStateToProps)(TwitchChannels);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Avatar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { messages } from 'shared';\n\nconst useStyles = makeStyles({\n  avatar: {\n    marginLeft: '8px',\n  },\n  text: {\n    flexGrow: 1,\n    marginLeft: '16px',\n  },\n});\n\nconst Title = ({\n  avatarUrl,\n  text,\n  secondaryText,\n  showFullTitle,\n}) => {\n  const styles = useStyles();\n\n  return (\n    <>\n      {avatarUrl && <Avatar className={styles.avatar} src={avatarUrl} />}\n      <Typography className={styles.text} noWrap variant=\"h6\">\n        {text || messages.en.app.title}\n        {showFullTitle && secondaryText && ` - ${secondaryText}`}\n      </Typography>\n    </>\n  );\n};\n\nTitle.defaultProps = {\n  avatarUrl: null,\n  text: null,\n  secondaryText: '',\n  showFullTitle: false,\n};\n\nTitle.propTypes = {\n  avatarUrl: PropTypes.string,\n  text: PropTypes.string,\n  secondaryText: PropTypes.string,\n  showFullTitle: PropTypes.bool,\n};\n\nexport default React.memo(Title);\n","import { connect } from 'react-redux';\nimport { getChannelAvatarUrl, getChannelName, getStreamTitle } from 'twitch/selectors';\nimport Title from './Title';\n\nconst mapStateToProps = ({ twitch }) => ({\n  avatarUrl: getChannelAvatarUrl(twitch),\n  text: getChannelName(twitch),\n  secondaryText: getStreamTitle(twitch),\n});\n\nexport default connect(mapStateToProps)(Title);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { IconButton, ButtonBase, Tooltip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  buttonBase: {\n    padding: '4px',\n  },\n});\n\nconst ActionButton = ({\n  children,\n  icon,\n  onClick,\n  tooltip,\n}) => {\n  const styles = useStyles();\n\n  return (\n    <Tooltip title={tooltip}>\n      {icon ? (\n        <IconButton onClick={onClick}>\n          {children}\n        </IconButton>\n      ) : (\n        <ButtonBase className={styles.buttonBase} onClick={onClick}>\n          {children}\n        </ButtonBase>\n      )}\n    </Tooltip>\n  );\n};\n\nActionButton.defaultProps = {\n  icon: false,\n  tooltip: '',\n};\n\nActionButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  icon: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  tooltip: PropTypes.string,\n};\n\nexport default React.memo(ActionButton);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Avatar } from '@material-ui/core';\nimport { Person } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\nimport { messages } from 'shared';\nimport { twitchActions } from 'twitch';\nimport ActionButton from './ActionButton';\n\nconst { tooltips } = messages.en.actions;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nconst AuthenticationButton = ({\n  avatarUrl,\n  isLoggedIn,\n  login,\n  logout,\n}) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.container}>\n      {isLoggedIn ? (\n        <ActionButton tooltip={tooltips.logout} onClick={logout}>\n          <Avatar src={avatarUrl} />\n        </ActionButton>\n      ) : (\n        <ActionButton icon tooltip={tooltips.login} onClick={login}>\n          <Person />\n        </ActionButton>\n      )}\n    </div>\n  );\n};\n\nAuthenticationButton.defaultProps = {\n  avatarUrl: null,\n};\n\nAuthenticationButton.propTypes = {\n  avatarUrl: PropTypes.string,\n  isLoggedIn: PropTypes.bool.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ twitch: { user: { userId, avatarUrl } } }) => ({\n  avatarUrl,\n  isLoggedIn: Boolean(userId),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: () => dispatch(twitchActions.twitchLogin()),\n  logout: () => dispatch(twitchActions.twitchLogout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticationButton);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Close, ArrowBack } from '@material-ui/icons';\nimport { messages } from 'shared';\nimport { twitchActions } from 'twitch';\nimport ActionButton from './ActionButton';\n\nconst { tooltips } = messages.en.actions;\n\nconst CloseStreamButton = ({\n  closeStreamOrVideo,\n  show,\n  tooltip,\n  icon,\n}) => (\n  show && (\n    <ActionButton\n      icon\n      tooltip={tooltip}\n      onClick={closeStreamOrVideo}\n    >\n      {{\n        close: (<Close />),\n        back: (<ArrowBack />),\n      }[icon]}\n    </ActionButton>\n  )\n);\n\nCloseStreamButton.propTypes = {\n  closeStreamOrVideo: PropTypes.func.isRequired,\n  icon: PropTypes.oneOf(['close', 'back']),\n  show: PropTypes.bool.isRequired,\n  tooltip: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = ({ twitch: { channel, video } }) => ({ channel, video });\n\nconst mapDispatchToProps = dispatch => ({\n  closeStream: () => {\n    dispatch(twitchActions.clearChannel());\n    dispatch(twitchActions.setShowVideosState(false));\n  },\n  closeVideo: () => {\n    dispatch(twitchActions.clearVideo());\n    dispatch(twitchActions.setShowVideosState(false));\n  },\n});\n\nconst mergeProps = ({ channel, video }, { closeStream, closeVideo }) => ({\n  closeStreamOrVideo: () => {\n    if (video) {\n      closeVideo();\n    } else {\n      closeStream();\n    }\n  },\n  icon: (video && 'back') || (channel && 'close') || null,\n  tooltip: video ? tooltips.closeVideo : tooltips.closeStream,\n  show: Boolean(video || channel),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(CloseStreamButton);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Chat, ChatOutlined } from '@material-ui/icons';\nimport { messages } from 'shared';\nimport { twitchActions } from 'twitch';\nimport ActionButton from './ActionButton';\n\nconst { tooltips } = messages.en.actions;\n\nconst ToggleChatButton = ({ show, showChat, toggleChat }) => (\n  show && (\n    <ActionButton\n      icon\n      tooltip={showChat ? tooltips.hideChat : tooltips.showChat}\n      onClick={toggleChat}\n    >\n      {showChat ? <Chat /> : <ChatOutlined />}\n    </ActionButton>\n  )\n);\n\nToggleChatButton.propTypes = {\n  showChat: PropTypes.bool.isRequired,\n  toggleChat: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({\n  twitch: {\n    channel,\n    showChat,\n  },\n}) => ({\n  show: Boolean(channel),\n  showChat,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleChat: () => dispatch(twitchActions.toggleShowChatState()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToggleChatButton);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Videocam, VideocamOutlined } from '@material-ui/icons';\nimport { messages } from 'shared';\nimport { twitchActions } from 'twitch';\nimport ActionButton from './ActionButton';\n\nconst RefreshDataButton = ({ changeView, show, showVideos }) => (\n  show && (\n    <ActionButton\n      icon\n      tooltip={messages.en.actions.tooltips.showVideos}\n      onClick={changeView}\n    >\n      {showVideos ? (\n        <Videocam />\n      ) : (\n        <VideocamOutlined />\n      )}\n    </ActionButton>\n  )\n);\n\nRefreshDataButton.propTypes = {\n  changeView: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n  showVideos: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = ({\n  twitch: {\n    channel,\n    showVideos,\n  },\n}) => ({\n  show: Boolean(channel),\n  showVideos,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeView: () => dispatch(twitchActions.toggleShowVideosState()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RefreshDataButton);\n","import React from 'react';\nimport CloseStreamButtonContainer from './CloseStreamButtonContainer';\nimport ChangeViewButtonContainer from './ChangeViewButtonContainer';\nimport ToggleChatButtonContainer from './ToggleChatButtonContainer';\nimport AuthenticationButtonContainer from './AuthenticationButtonContainer';\n\nconst HeaderButtons = () => (\n  <>\n    <CloseStreamButtonContainer />\n    <ChangeViewButtonContainer />\n    <ToggleChatButtonContainer />\n    <AuthenticationButtonContainer />\n  </>\n);\n\nexport default HeaderButtons;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport store from 'store';\nimport { theme } from 'theme';\nimport { Layout } from 'layout';\nimport { TwitchViewContainer, TwitchChannelsContainer } from 'twitch';\nimport { TitleContainer } from 'title';\nimport { HeaderButtons } from 'headerButtons';\n\nconst App = () => (\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Layout\n        header={(\n          <>\n            <TitleContainer showFullTitle />\n            <HeaderButtons />\n          </>\n        )}\n        sidebar={<TwitchChannelsContainer />}\n        sidebarHeader={<TitleContainer />}\n      >\n        <TwitchViewContainer />\n      </Layout>\n    </ThemeProvider>\n  </Provider>\n);\n\nexport default App;\n","const isLocalhost = Boolean(window.location.hostname === 'localhost'\n    || window.location.hostname === '[::1]'\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport const register = (config) => {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\n\nconst registerValidSW = (swUrl, config) => {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.addEventListener('updatefound', () => {\n        const installingWorker = registration.installing;\n\n        if (installingWorker == null) {\n          return;\n        }\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller && config && config.onUpdate) {\n              config.onUpdate(registration);\n            } else if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        };\n      });\n    });\n};\n\nconst checkValidServiceWorker = (swUrl, config) => {\n  fetch(swUrl)\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n};\n\nexport const unregister = () => {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n};\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(App(), document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}